:root {
  --primary-color: #ff7833;
  --secondary-color: #31333b;
  --secondary-color-light: #444856;
  --secondary-color-dark: #28292c;
  --default-gap: 3rem;
}
html {
  font-size: 62.5%;
}
body {
  display: flex;
  margin: 0;
  color: #e7e7e7;
  /* usei min height com 100vh pois todo conteúdo adicional ainda ocupara os 100da vh com a msm edição msm cor do background */
  min-height: 100vh;
  line-height: 1.7;
  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
  background-image: url(../imagens/bg-unsplash-2x.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-attachment: fixed;
}

.main-header {
  width: 260px;
  background-color: rgb(49, 51, 59, 0.8);
  /* no meu header total eu falei q n tenho flex grow e nem shrink mas um flex basis de 260px, logo ele ficara com a largura igual pra tudo no header */
  flex: 0 0 26rem;
}
.main {
  background-color: #444856;
  background-color: rgba(68, 72, 86, 0.6);
  /* no meu main na onde tem meu conteúdo eu falei q eu qro um flex grow pq ele faltava completar um espaço ai eu pedi pra ele ocupar todo espaço com o flex grow 1 */
  flex: 1 0;
  padding: 6.5rem 6rem 7.5rem;
}
.main h1 {
  font-size: 4rem;
  color: #7b7b7b;
  margin-top: 2.4rem;
  margin-bottom: 3rem;
}
h2,
h3,
h4,
h5,
h6 {
  color: var(--primary-color);
  margin: 0;
  padding-bottom: 2rem;
}
h2 {
  margin-top: 2rem;
}
article {
  padding: 1em 0;
}
section {
  margin-bottom: 3rem;
}
.destaque {
  border-left: 1px solid var(--primary-color);
  font-size: 1.1em;
  /* padding-left: 2em; */
  margin-bottom: 2.2em;
  padding: 0 0 0 2em;
}
a {
  color: inherit;
}
.main,
.main-header {
  font-size: 1.6rem;
}
.perfil {
  max-width: 10rem;
  border-radius: 50%;
  margin: 6rem 2.5rem 2rem 0;
}
.bullet li {
  border-bottom: 1px solid #e7e7e7;
  /* display: block; */
  padding: 1.7rem 0 1.7rem;
  /* text-align: right; */
  margin-right: 2.2rem;
  transition: padding-right 0.2s, background-color 0.4s;
}
.bullet ul {
  list-style-type: none;
}
.bullet {
  display: block;
  text-align: right;
  position: sticky;
  left: 0;
  top: 0;
}
.bullet li:hover {
  padding-right: 0.5rem;
  background-color: #444856;
}
.bullet ul a:focus {
  padding-right: 0.5rem;
  background-color: #444856;
}
.bullet a {
  text-decoration: none;
}
.underline {
  text-decoration: red wavy underline;
}
.card {
  max-width: 740px;
  background-color: var(--secondary-color);
  padding: 0;
}
.card img {
  /* estou falando q minha img tera um max width do seu tamanho completo, nao causando barra de rolagem em alguns casos */
  max-width: 100%;
}
.card_content {
  padding: 1em;
}
.card_content p {
  margin-top: 0;
  margin-bottom: 0;
}
.row {
  display: flex;
  gap: var(--default-gap);
  padding-top: 1.5rem;
  justify-content: space-between;
}
.row .row {
  padding-top: 0;
}
.row > * {
  /* estou falando q minha classe row quando usar >* estou falando q qm for filho da classe row terá esses atributos: flex grow 1 pra ocupar espaço, o shrink de 0 pra n diminuir e o flex basis de 0% issso fará com q as colunas sempre fiquem do msm tamanho independente do conteúdo. */
  flex: 1 0 0%;
}
.alternate {
  list-style-type: none;
  padding-left: 0;
}
.alternate li:not(:last-child) {
  border-bottom: 2px solid;
  padding: 0;
}
.emoji {
  list-style-type: "\1F642";
}
input,
label,
textarea,
select {
  display: inline-block;
  width: 100%;
  box-sizing: border-box;
}
input[type="radio"],
input[type="checkbox"] {
  width: auto;
}
input,
textarea,
select {
  padding: 1.2rem;
  background-color: #ccc;
  margin-bottom: 1.6rem;
  border-radius: 5px;
  border: none;
}
.btn {
  background-color: var(--secondary-color);
  border: 1px solid var(--secondary-color-dark);
  color: white;
  font-size: 1.2rem;
  cursor: pointer;
  padding: 1.2rem;
  border-radius: 5px;
  padding: 0.8em 1.2em;
}
.btn + .btn {
  margin-left: 2rem;
}
.btn-full + .btn-full {
  margin-left: 0;
  margin-top: 2rem;
}
.btn-full {
  display: inline-block;
  width: 100%;
  box-sizing: border-box;
}
.btn:hover {
  background-color: var(--secondary-color-dark);
}
.form {
  /* eu usei o calc pra calcular a metade do width de 100% coloquei pra ser metade e como eu coloquei um valor anterior, se eu mudasse la em cima o valor aq em baixo n iria mudar, logo eu criei uma variável falando um determinado falor e dps dividi por 2, se eu precisar mudar o valor la de cima aq vai mudar tmb mas sempre pra metade dele como eu estou querendo, visto q eu pedi pra ele ser dividido por 2(esse valor no caso e o gap de 3rem la do row). */
  width: calc(50% - var(--default-gap) / 2);
}
.btn2 {
  background-color: transparent;
  outline: 2px solid var(--secondary-color-dark);
}
.btn-big {
  font-size: 1.6rem;
}
table {
  width: 100%;
  border-collapse: collapse;
  /* sempre colocar width de 100% */
}
.table td,
.table th {
  padding: 1.6rem;
  /* aq eu peguei a minha classe table e peguei o th e o td e falei q tem paddding */
}
tbody {
  font-size: 1.5rem;
  /* mudei o tamanho da fonte do tbody e n do thead */
}
table th {
  text-transform: uppercase;
  text-align: left;
  /* falei q na table vai ser maiusculo e vai pra esquerda */
}
.table-verticalLines td:not(:last-child),
.table-verticalLines th:not(:last-child) {
  border-right: 1px solid black;
  /* peguei minha ultima section e falei e editei pela classe e eu falei q vai ter essa edição menos o ultimo filho, tanto da td qnd da th */
}
table th:last-child,
table td:last-child {
  text-align: right;
  /* falei q na minha td e na th vai pra direita */
}
.table-alternate tbody tr:nth-child(odd) {
  background-color: var(--secondary-color-dark);
  /* aq eu peguei a classe e peguei o tr(pra editar na horizontal) do tbody e falei q qnd for impar vai ter essa edição ai */
}
.table:not(.table-alternate) td {
  border-bottom: 1px solid var(--secondary-color-dark);
  /* eu selecionei a classe table, exceto a q n tem a classe table-alternate, a unica q n tem é a primeira, logo vai editar a primeira, e eu peguei a td pq só da certo se editar na td */
}
